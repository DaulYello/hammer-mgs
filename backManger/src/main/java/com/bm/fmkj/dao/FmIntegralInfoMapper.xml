<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bm.fmkj.dao.FmIntegralInfoMapper">
  <resultMap id="BaseResultMap" type="com.bm.fmkj.dao.FmIntegralInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="integral_num" jdbcType="DOUBLE" property="integralNum" />
  </resultMap>


  <insert id ="allotRToUser" parameterType="java.util.List">
      insert into fm_integral_info
          (uid, integral_num, create_date)
          values
           <foreach collection ="list" item="integralInfo" index= "index" separator =",">
               (
               #{integralInfo.uid},
               #{integralInfo.integralNum},
               #{integralInfo.createDate}
               )
           </foreach >
  </insert>

    <select id="queryRBefore" resultMap="BaseResultMap">

        SELECT
          IF(
            ISNULL(SUM(integral_num)),
            0,
            SUM(integral_num)
          ) AS integral_num
        FROM
          fm_integral_info
        WHERE create_date BETWEEN
          (SELECT
            DATE_SUB(NOW(), INTERVAL 240 HOUR))
          AND
          (SELECT
            DATE_SUB(NOW(), INTERVAL 48 HOUR))
          AND STATUS = 0

    </select>

    <update id="recyleRToAccount" parameterType="java.util.HashMap">
        UPDATE
            hc_account h
          SET
            h.my_p = h.my_p + #{totalNum}
          WHERE h.id = #{uid}
    </update>

    <update id="updateFmIntegral">

        UPDATE
          fm_integral_info
        SET
          STATUS = 2
        WHERE create_date BETWEEN
          (SELECT
            DATE_SUB(NOW(), INTERVAL 240 HOUR))
          AND
          (SELECT
            DATE_SUB(NOW(), INTERVAL 48 HOUR))
          AND STATUS = 0

    </update>

    <select id="queryLastInvitRank" resultType="java.util.HashMap">
        SELECT
          t.rid AS uid,
          COUNT(t.rid) AS invitingNum
        FROM
          hc_account t
        WHERE YEARWEEK(create_date, 1) = YEARWEEK(DATE_SUB(CURDATE(), INTERVAL 7 DAY), 1)
        GROUP BY t.rid
        ORDER BY invitingNum DESC
        LIMIT 0, 3
    </select>
</mapper>