<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="     
           http://www.springframework.org/schema/beans     
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd     
           http://www.springframework.org/schema/context     
           http://www.springframework.org/schema/context/spring-context-4.2.xsd    
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- properties加载/组件扫描 -->
	<context:property-placeholder
		location="classpath:dataSource.properties" />
	<context:component-scan
		base-package="com.*.fmkj.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 数据源配置 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 监控数据库 -->
		<property name="filters" value="stat" />
		<property name="maxActive" value="200" /><!-- 最大连接数量 -->
		<property name="initialSize" value="10" /><!-- 初始化连接 -->
		<property name="maxWait" value="30000" /><!-- 超时等待时间(单位毫秒) -->
		<property name="minIdle" value="2" /><!-- 最小空闲连接 -->
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180000" />
		<property name="connectionProperties"
			value="clientEncoding=UTF-8" /><!-- 编码方式 -->
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="minEvictableIdleTimeMillis" value="180000" /><!-- 
			配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<!-- 并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
	</bean>
	<!-- sqlsessionFactory配置 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-cfg.xml" />
		<property name="mapperLocations"
			value="classpath*:com/*/fmkj/dao/*Mapper.xml" />
	</bean>

	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut"
		class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.*.fmkj.*</value>
			</list>
		</property>
	</bean>
	<!-- aop配置 -->
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>

	<!-- mapperScanner配置 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.*.fmkj.dao" />
	</bean>

	<!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
		<!-- <constructor-arg name="executorType" value="BATCH"></constructor-arg> -->
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明式事务 注解配置 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" proxy-target-class="true" />
	<context:component-scan
		base-package="com.*.fmkj.*" />
</beans>